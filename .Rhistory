y = 'Adjusted Defensive EPA/Play',
x = 'EPA/Play'
)
ggsave(dpi = 400, filename = 'plot.png',  width = 8,height = 5)
ggsave(dpi = 400, filename = 'plot.png',  width = 8,height = 5)
by_team %>% ggplot(aes(y= adjusted_def_epa,x=epa)) +
geom_hline(yintercept = mean(by_team$adjusted_def_epa), color = "red", linetype = "dashed") +
geom_vline(xintercept =  mean(by_team$epa), color = "red", linetype = "dashed")+
ggimage::geom_image(aes(image = team_logo_espn), size = 0.06)  +
geom_abline(slope = -1, intercept = c(-.3,-.15,0,.15,.3),
alpha = .2) +
scale_y_reverse() +
ggplot2::theme_bw() +
labs(
y = 'Adjusted Defensive EPA/play',
x = 'EPA/play',
Title = 'NFL Team Tiers, 2021 (Defense Adjusted for Opponent)'
)
by_team %>% ggplot(aes(y= adjusted_def_epa,x=epa)) +
geom_hline(yintercept = mean(by_team$adjusted_def_epa), color = "red", linetype = "dashed") +
geom_vline(xintercept =  mean(by_team$epa), color = "red", linetype = "dashed")+
ggimage::geom_image(aes(image = team_logo_espn), size = 0.06)  +
geom_abline(slope = -1, intercept = c(-.3,-.15,0,.15,.3),
alpha = .2) +
scale_y_reverse() +
ggplot2::theme_bw() +
labs(
y = 'Adjusted Defensive EPA/play',
x = 'EPA/play',
title = 'NFL Team Tiers, 2021 (Defense Adjusted for Opponent)'
)
ggsave(dpi = 400, filename = 'plot.png',  width = 8,height = 5)
ggsave(dpi = 400, filename = 'plot.png',  width = 8,height = 5)
by_team %>% ggplot(aes(y= adjusted_def_epa,x=epa)) +
geom_hline(yintercept = mean(by_team$adjusted_def_epa), color = "red", linetype = "dashed") +
geom_vline(xintercept =  mean(by_team$epa), color = "red", linetype = "dashed")+
ggimage::geom_image(aes(image = team_logo_espn), size = 0.06)  +
geom_abline(slope = -1, intercept = c(-.3,-.15,0,.15,.3),
alpha = .2) +
scale_y_reverse() +
ggplot2::theme_bw() +
labs(
y = 'Adjusted Defensive EPA/play',
x = 'EPA/play',
title = 'NFL Team Tiers, 2021 (defensive efficiency adjusted for opponent)'
) + theme(
plot.title = element_text(hjust = 0.5)
)
ggsave(dpi = 400, filename = 'plot.png',  width = 8,height = 5)
by_team %>% ggplot(aes(y= adjusted_def_epa,x=epa)) +
geom_hline(yintercept = mean(by_team$adjusted_def_epa), color = "red", linetype = "dashed") +
geom_vline(xintercept =  mean(by_team$epa), color = "red", linetype = "dashed")+
ggimage::geom_image(aes(image = team_logo_espn), size = 0.06)  +
geom_abline(slope = -1, intercept = c(-.3,-.15,0,.15,.3),
alpha = .2) +
scale_y_reverse() +
ggplot2::theme_bw() +
labs(
y = 'Adjusted Defensive EPA/play',
x = 'EPA/play',
title = 'NFL Team Tiers, 2021',
subtitle =  'Defensive Efficiency Opponent-adjusted'
) + theme(
plot.title = element_text(hjust = 0.5)
)
by_team %>% ggplot(aes(y= adjusted_def_epa,x=epa)) +
geom_hline(yintercept = mean(by_team$adjusted_def_epa), color = "red", linetype = "dashed") +
geom_vline(xintercept =  mean(by_team$epa), color = "red", linetype = "dashed")+
ggimage::geom_image(aes(image = team_logo_espn), size = 0.06)  +
geom_abline(slope = -1, intercept = c(-.3,-.15,0,.15,.3),
alpha = .2) +
scale_y_reverse() +
ggplot2::theme_bw() +
labs(
y = 'Adjusted Defensive EPA/play',
x = 'EPA/play',
title = 'NFL Team Tiers, 2021',
subtitle =  'Defensive Efficiency Opponent-adjusted'
) + theme(
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)
)
by_team %>% ggplot(aes(y= adjusted_def_epa,x=epa)) +
geom_hline(yintercept = mean(by_team$adjusted_def_epa), color = "red", linetype = "dashed") +
geom_vline(xintercept =  mean(by_team$epa), color = "red", linetype = "dashed")+
ggimage::geom_image(aes(image = team_logo_espn), size = 0.06)  +
geom_abline(slope = -1, intercept = c(-.3,-.15,0,.15,.3),
alpha = .2) +
scale_y_reverse() +
ggplot2::theme_bw() +
labs(
y = 'Adjusted Defensive EPA/play',
x = 'EPA/play',
title = 'NFL Team Tiers, 2021',
subtitle =  'Defensive efficiency is adjusted by opponent'
) + theme(
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)
)
ggsave(dpi = 400, filename = 'plot.png',  width = 8,height = 5)
epa_by_game %>% lm(
formula = def_epa ~ as.factor(posteam)) %>% predict()
epa_by_game %>% mutate(
predicted_def_epa = epa_by_game %>% lm(
formula = def_epa ~ as.factor(posteam)) %>% predict()
)
epa_by_game = data %>%
filter(
season_type == 'REG',
play_type %in% c('pass','run'),
!is.na(epa)
)%>%
group_by(
posteam,defteam
) %>% summarise(
epa = mean(epa),
gameid = unique(game_id)
) %>% ungroup() %>% mutate(def_epa = epa)
epa_by_game %>% mutate(
predicted_def_epa = epa_by_game %>% lm(
formula = def_epa ~ as.factor(posteam)) %>% predict()
)
epa_by_game %>% mutate(
predicted_def_epa = epa_by_game %>%
lm(formula = def_epa ~ as.factor(posteam)) %>%
predict(),
adjusted_def_epa = def_epa - epa_by_game
)
epa_by_game %>% mutate(
predicted_def_epa = epa_by_game %>%
lm(formula = def_epa ~ as.factor(posteam)) %>%
predict(),
adjusted_def_epa = def_epa - predicted_def_epa
)
epa_by_game = epa_by_game %>% mutate(
predicted_def_epa = epa_by_game %>%
lm(formula = def_epa ~ as.factor(posteam)) %>%
predict(),
adjusted_def_epa = def_epa - predicted_def_epa
)
View(epa_by_game)
epa_by_game = data %>%
filter(
season_type == 'REG',
play_type %in% c('pass','run'),
!is.na(epa)
)%>%
group_by(
game_id,posteam,defteam
) %>% summarise(
epa = mean(epa)
) %>% ungroup() %>% mutate(def_epa = epa)
View(epa_by_game)
epa_by_game = epa_by_game %>% mutate(
predicted_def_epa = epa_by_game %>%
lm(formula = def_epa ~ as.factor(posteam)) %>%
predict(),
adjusted_def_epa = def_epa - predicted_def_epa
)
View(epa_by_game)
by_offense = epa_by_game %>%
group_by(posteam) %>%
summarise(
epa = mean(epa)) %>%
rename(team = posteam)
by_offense
team = merge(defense,offense, by = 'team')
offense = epa_by_game %>%
group_by(posteam) %>%
summarise(
epa = mean(epa)) %>%
rename(team = posteam)
defense = epa_by_game %>%
group_by(defteam) %>%
summarise(
adjusted_def_epa = mean(adjusted_def_epa)) %>%
rename(team = defteam)
team = merge(defense,offense, by = 'team')
team
nflfastR::teams_colors_logos
team= merge(by_team,nflfastR::teams_colors_logos, by.x = "team", by.y = "team_abbr")
by_team %>% ggplot(aes(y= adjusted_def_epa,x=epa)) +
geom_hline(yintercept = mean(by_team$adjusted_def_epa), color = "red", linetype = "dashed") +
geom_vline(xintercept =  mean(by_team$epa), color = "red", linetype = "dashed")+
ggimage::geom_image(aes(image = team_logo_espn), size = 0.06)  +
geom_abline(slope = -1, intercept = c(-.3,-.15,0,.15,.3),
alpha = .2) +
scale_y_reverse() +
ggplot2::theme_bw() +
labs(
y = 'Adjusted Defensive EPA/play',
x = 'EPA/play',
title = 'NFL Team Tiers, 2021',
subtitle =  'Defensive efficiency is adjusted by opponent'
) + theme(
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)
)
team = merge(defense,offense, by = 'team')
team = merge(team,nflfastR::teams_colors_logos, by.x = "team", by.y = "team_abbr")
team %>% ggplot(aes(y= adjusted_def_epa,x=epa)) +
geom_hline(yintercept = mean(by_team$adjusted_def_epa), color = "red", linetype = "dashed") +
geom_vline(xintercept =  mean(by_team$epa), color = "red", linetype = "dashed")+
ggimage::geom_image(aes(image = team_logo_espn), size = 0.06)  +
geom_abline(slope = -1, intercept = c(-.3,-.15,0,.15,.3), alpha = .2) +
scale_y_reverse() +
ggplot2::theme_bw() +
labs(
y = 'Adjusted Defensive EPA/play',
x = 'EPA/play',
title = 'NFL Team Tiers, 2021',
subtitle =  'Defensive efficiency is adjusted by opponent'
) + theme(
plot.title = element_text(hjust = 0.5),plot.subtitle = element_text(hjust = 0.5)
); ggsave(dpi = 400, filename = 'plot.png',  width = 8,height = 5)
setwd("~/GitHub/PowerRankings2021")
library(tidyverse)
library(nflfastR)
#Load data
data <- nflfastR::load_pbp(2021)
#Prepare data
filt = data %>% filter(
season_type == 'REG',
!play_type %in% c('no_play','qb_spike','qb_kneel'),
!is.na(play_type),
!is.na(epa)
)
#Sorry my SQL is pretty lame and I'll do this the long way
offense = filt %>%
group_by(
game_id, posteam) %>%
summarise(
EPA = sum(epa),
homet = unique(home_team),
awayt = unique(away_team)
) %>%
ungroup()
defense = filt %>%
group_by(
game_id, defteam) %>%
summarise(
DefEPA = sum(epa)
) %>%
ungroup()
team = dplyr::inner_join(
offense,defense, by = c("game_id" = "game_id", "posteam" = "defteam")
) %>%
rename(
team = posteam
)%>%
mutate(
EPADiff = EPA - DefEPA,
opponent = if_else(team == homet, awayt,homet),
home = if_else(team == homet,1,0)
) %>%
select(team,opponent,home,EPADiff) %>% arrange(by=team)
#Model
model = team %>%
lme4::lmer(
formula=
# Response variable
EPADiff ~
#adjust for home field
home +
#adjust for opponent
as.factor(opponent) +
#this is the strength of each team
(1|team)
)
#Extract random variable effects
effects = broom.mixed::tidy(model,effects="ran_vals") %>%
filter(group == 'team') %>%
select(level,estimate,std.error) %>% rename(team = level) %>%
arrange(
by = estimate
)
#Plot
#Let's do 95% confidence interval
z <- 1.96
#Pretty plot
effects %>%
ggplot(aes(x=factor(team, level = team),estimate)) +
geom_linerange(alpha = .6, color = 'gray', linetype = 2,aes(ymin=estimate - z*std.error,
ymax=estimate + z*std.error))+
geom_point(aes(fill = estimate),color='gray',pch=21,size=3) +
coord_flip() + ggdark::dark_theme_classic() +
theme(
axis.title.y = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = 'none'
) +
labs(y = "EPA Difference",
caption = "Data: nflfastR, by  @adriancm93",
title = "Power Rankings",
subtitle = paste0(
unique(data$season),' season, weeks ',min(data$week),'-',max(data$week), ', adjusted for opponent and home field')
)
#Pretty plot
effects %>%
ggplot(aes(x=factor(team, level = team),estimate)) +
geom_linerange(alpha = .6, color = 'gray', linetype = 2,aes(ymin=estimate - z*std.error,
ymax=estimate + z*std.error))+
geom_point(aes(fill = estimate),alpha = 0.9, color='gray',pch=21,size=3) +
coord_flip() + ggdark::dark_theme_classic() +
theme(
axis.title.y = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = 'none'
) +
labs(y = "EPA Difference",
caption = "Data: nflfastR, by  @adriancm93",
title = "Power Rankings",
subtitle = paste0(
unique(data$season),' season, weeks ',min(data$week),'-',max(data$week), ', adjusted for opponent and home field')
)
#Pretty plot
effects %>%
ggplot(aes(x=factor(team, level = team),estimate)) +
geom_linerange(alpha = .6, color = 'gray', linetype = 2,aes(ymin=estimate - z*std.error,
ymax=estimate + z*std.error))+
geom_point(aes(fill = estimate),alpha = 0.6, color='gray',pch=21,size=3) +
coord_flip() + ggdark::dark_theme_classic() +
theme(
axis.title.y = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = 'none'
) +
labs(y = "EPA Difference",
caption = "Data: nflfastR, by  @adriancm93",
title = "Power Rankings",
subtitle = paste0(
unique(data$season),' season, weeks ',min(data$week),'-',max(data$week), ', adjusted for opponent and home field')
)
#Pretty plot
effects %>%
ggplot(aes(x=factor(team, level = team),estimate)) +
geom_linerange(alpha = .7, color = 'gray', linetype = 2,aes(ymin=estimate - z*std.error,
ymax=estimate + z*std.error))+
geom_point(aes(fill = estimate),alpha = 0.8, color='gray',pch=21,size=3) +
coord_flip() + ggdark::dark_theme_classic() +
theme(
axis.title.y = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = 'none'
) +
labs(y = "EPA Difference",
caption = "Data: nflfastR, by  @adriancm93",
title = "Power Rankings",
subtitle = paste0(
unique(data$season),' season, weeks ',min(data$week),'-',max(data$week), ', adjusted for opponent and home field')
)
#Save it
ggsave(dpi = 600, filename = 'ranks.png',  width = 12,height = 6)
#Pretty plot
effects %>%
ggplot(aes(x=factor(team, level = team),estimate)) +
geom_linerange(alpha = .7, color = 'gray', linetype = 2,aes(ymin=estimate - z*std.error,
ymax=estimate + z*std.error))+
geom_point(aes(fill = estimate),alpha = 1, color='gray',pch=21,size=3) +
coord_flip() + ggdark::dark_theme_classic() +
theme(
axis.title.y = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = 'none'
) +
labs(y = "EPA Difference",
caption = "Data: nflfastR, by  @adriancm93",
title = "Power Rankings",
subtitle = paste0(
unique(data$season),' season, weeks ',min(data$week),'-',max(data$week), ', adjusted for opponent and home field')
)
#Save it
ggsave(dpi = 600, filename = 'ranks.png',  width = 12,height = 6)
#Scale EPA
cols = c('EPADiff')
pre_proc_val <- caret::preProcess(team[,cols], method = c("center", "scale"))
pre_proc_val
team[,cols] = stats::predict(pre_proc_val, team[,cols])
team
View(team)
#Model
model = team %>%
lme4::lmer(
formula=
# Response variable
EPADiff ~
#adjust for home field
home +
#adjust for opponent
as.factor(opponent) +
#this is the strength of each team
(1|team)
)
#Extract random variable effects
effects = broom.mixed::tidy(model,effects="ran_vals") %>%
filter(group == 'team') %>%
select(level,estimate,std.error) %>% rename(team = level) %>%
arrange(
by = estimate
)
#Plot
#Let's do 95% confidence interval
z <- 1.96
#Pretty plot
effects %>%
ggplot(aes(x=factor(team, level = team),estimate)) +
geom_linerange(alpha = .7, color = 'gray', linetype = 2,aes(ymin=estimate - z*std.error,
ymax=estimate + z*std.error))+
geom_point(aes(fill = estimate),alpha = 1, color='gray',pch=21,size=3) +
coord_flip() + ggdark::dark_theme_classic() +
theme(
axis.title.y = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = 'none'
) +
labs(y = "EPA Difference",
caption = "Data: nflfastR, by  @adriancm93",
title = "Power Rankings",
subtitle = paste0(
unique(data$season),' season, weeks ',min(data$week),'-',max(data$week), ', adjusted for opponent and home field')
)
#Save it
ggsave(dpi = 600, filename = 'ranks.png',  width = 12,height = 6)
setwd("~/GitHub/PowerRankings2021")
library(tidyverse)
library(nflfastR)
#Load data
data <- nflfastR::load_pbp(2021)
#Prepare data
filt = data %>% filter(
season_type == 'REG',
!play_type %in% c('no_play','qb_spike','qb_kneel'),
!is.na(play_type),
!is.na(epa)
)
#Sorry my SQL is pretty lame and I'll do this the long way
offense = filt %>%
group_by(
game_id, posteam) %>%
summarise(
EPA = sum(epa),
homet = unique(home_team),
awayt = unique(away_team)
) %>%
ungroup()
defense = filt %>%
group_by(
game_id, defteam) %>%
summarise(
DefEPA = sum(epa)
) %>%
ungroup()
team = dplyr::inner_join(
offense,defense, by = c("game_id" = "game_id", "posteam" = "defteam")
) %>%
rename(
team = posteam
)%>%
mutate(
EPADiff = EPA - DefEPA,
opponent = if_else(team == homet, awayt,homet),
home = if_else(team == homet,1,0)
) %>%
select(team,opponent,home,EPADiff) %>% arrange(by=team)
#Model
model = team %>%
lme4::lmer(
formula=
# Response variable
EPADiff ~
#adjust for home field
home +
#adjust for opponent
as.factor(opponent) +
#this is the strength of each team
(1|team)
)
#Extract random variable effects
effects = broom.mixed::tidy(model,effects="ran_vals") %>%
filter(group == 'team') %>%
select(level,estimate,std.error) %>% rename(team = level) %>%
arrange(
by = estimate
)
#Plot
#Let's do 95% confidence interval
z <- 1.96
#Pretty plot
effects %>%
ggplot(aes(x=factor(team, level = team),estimate)) +
geom_linerange(alpha = .7, color = 'gray', linetype = 2,aes(ymin=estimate - z*std.error,
ymax=estimate + z*std.error))+
geom_point(aes(fill = estimate),alpha = 1, color='gray',pch=21,size=3) +
coord_flip() + ggdark::dark_theme_classic() +
theme(
axis.title.y = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = 'none'
) +
labs(y = "EPA Difference",
caption = "Data: nflfastR, by  @adriancm93",
title = "Power Rankings",
subtitle = paste0(
unique(data$season),' season, weeks ',min(data$week),'-',max(data$week), ', adjusted for opponent and home field')
)
